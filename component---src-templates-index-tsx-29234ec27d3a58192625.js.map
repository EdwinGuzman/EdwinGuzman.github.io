{"version":3,"sources":["webpack:///./src/components/PostCard.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/templates/index.tsx"],"names":["PostCard","post","large","date","Date","frontmatter","datetime","format","displayDatetime","className","image","css","PostCardStyles","PostCardLarge","showImage","PostCardImageLink","to","fields","slug","key","PostCardImage","childImageSharp","fluid","alt","title","style","height","PostCardContent","PostCardContentLink","PostCardHeader","tags","PostCardPrimaryTag","PostCardTitle","PostCardExcerpt","excerpt","PostCardMeta","PostCardBylineContent","dateTime","timeToRead","lighten","colors","lightgrey","darkmode","darkgrey","blue","midgrey","navCss","darken","Pagination","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","rel","String","fromCharCode","Array","from","length","_","i","pageQuery","HomePosts","IndexPage","props","width","data","header","fixed","Helmet","lang","config","name","content","description","property","siteUrl","src","facebook","googleSiteVerification","twitter","split","Wrapper","outer","SiteHeader","SiteHeaderStyles","backgroundImage","inner","SiteNav","isHome","logo","maxHeight","display","id","SiteMain","Posts","PostFeed","allMarkdownRemark","edges","map","index","node","draft","children","pageContext","Footer"],"mappings":"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","file":"component---src-templates-index-tsx-29234ec27d3a58192625.js","sourcesContent":["import { format } from \"date-fns\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport _ from \"lodash\";\nimport { lighten } from \"polished\";\nimport React from \"react\";\n\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\n\nimport { colors } from \"../styles/colors\";\nimport { PageContext } from \"../templates/post\";\n\nexport interface PostCardProps {\n  post: PageContext;\n  large?: boolean;\n}\n\nexport const PostCard: React.FC<PostCardProps> = ({ post, large = false }) => {\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, \"yyyy-MM-dd\");\n  // 20 AUG 2018\n  const displayDatetime = format(date, \"dd LLL yyyy\");\n  return (\n    <article\n      className={`post-card ${post.frontmatter.image ? \"\" : \"no-image\"} ${\n        large ? \"post-card-large\" : \"\"\n      }`}\n      css={[PostCardStyles, large && PostCardLarge]}\n    >\n      {post.frontmatter.image && post.frontmatter.showImage && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug} key={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter?.image?.childImageSharp?.fluid && (\n              <Img\n                alt={`${post.frontmatter.title} cover image`}\n                style={{ height: \"100%\" }}\n                fluid={post.frontmatter.image.childImageSharp.fluid}\n              />\n            )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\" key=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug} key={post.fields.slug}>\n          <PostCardHeader className=\"post-card-header\" key=\"header\">\n            {post.frontmatter.tags && (\n              <PostCardPrimaryTag className=\"post-card-primary-tag\">\n                {post.frontmatter.tags[0]}\n              </PostCardPrimaryTag>\n            )}\n            <PostCardTitle className=\"post-card-title\">{post.frontmatter.title}</PostCardTitle>\n          </PostCardHeader>\n          <PostCardExcerpt className=\"post-card-excerpt\" key=\"excert\">\n            <p>{post.frontmatter.excerpt || post.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <PostCardBylineContent className=\"post-card-byline-content\">\n            <span className=\"post-card-byline-date\">\n              <time dateTime={datetime}>{displayDatetime}</time>{\" \"}\n              <span className=\"bull\">&bull;</span> {post.timeToRead} min read\n            </span>\n          </PostCardBylineContent>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nconst PostCardStyles = css`\n  position: relative;\n  flex: 1 1 301px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 0 40px;\n  padding: 0 20px 40px;\n  min-height: 220px;\n  /* border-bottom: 1px solid color(var(--lightgrey) l(+12%)); */\n  border-bottom: 1px solid ${lighten(\"0.12\", colors.lightgrey)};\n  background-size: cover;\n\n  @media (prefers-color-scheme: dark) {\n    /* border-bottom-color: color(var(--darkmode) l(+8%)); */\n    border-bottom-color: ${lighten(\"0.08\", colors.darkmode)};\n  }\n`;\n\nconst PostCardLarge = css`\n  @media (min-width: 795px) {\n    flex: 1 1 100%;\n    flex-direction: row;\n    padding-bottom: 40px;\n    min-height: 280px;\n    border-top: 0;\n\n    :not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  display: block;\n  /* color: var(--darkgrey); */\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardPrimaryTag = styled.div`\n  margin: 0 0 0.2em;\n  /* color: var(--blue); */\n  color: ${colors.blue};\n  font-size: 1.2rem;\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  transition: color 0.2s ease-in-out;\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.85);\n  }\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten(\"0.1\", colors.midgrey)} !important;\n  }\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  align-items: flex-start;\n  padding: 0;\n`;\n\nconst PostCardBylineContent = styled.div`\n  flex: 1 1 50%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  /* color: color(var(--midgrey) l(+10%)); */\n  color: ${lighten(\"0.1\", colors.midgrey)};\n  font-size: 1.2rem;\n  line-height: 1.4em;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n\n  span {\n    margin: 0;\n  }\n\n  a {\n    /* color: color(var(--darkgrey) l(+20%)); */\n    color: ${lighten(\"0.2\", colors.darkgrey)};\n    font-weight: 600;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n  }\n`;\n\nconst PostCardHeader = styled.header`\n  margin: 15px 0 0;\n`;\n\nexport const StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 0 0 -6px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n\n  @media (prefers-color-scheme: dark) {\n    /* border-color: color(var(--darkgrey) l(+2%)); */\n    border-color: ${lighten(\"0.02\", colors.darkgrey)};\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten(\"0.1\", colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n`;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { darken } from \"polished\";\nimport { css } from \"@emotion/core\";\n\nimport { colors } from \"../styles/colors\";\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n}\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? \"active\" : \"\"} to={`/${i === 0 ? \"\" : i + 1}`}>\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell;\n    background: #fff;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n    margin: 0 4px;\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n    border-radius: 6px;\n    margin-bottom: 5px;\n    min-width: 50px;\n\n    &.active {\n      -webkit-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      -moz-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { graphql } from \"gatsby\";\nimport { FixedObject } from \"gatsby-image\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport { css } from \"@emotion/core\";\n\nimport { Footer } from \"../components/Footer\";\nimport SiteNav from \"../components/header/SiteNav\";\nimport Pagination from \"../components/Pagination\";\nimport { PostCard } from \"../components/PostCard\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport IndexLayout from \"../layouts\";\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteHeaderStyles,\n} from \"../styles/shared\";\nimport config from \"../website-config\";\nimport { PageContext } from \"./post\";\n\nexport interface IndexProps {\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    header: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst IndexPage: React.FC<IndexProps> = props => {\n  const { width, height } = props.data.header.childImageSharp.fixed;\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet key=\"helmet\">\n        <html lang={config.lang} />\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split(\"https://twitter.com/\")[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper key=\"wrapper\">\n        <div\n          css={[outer, SiteHeader, SiteHeaderStyles]}\n          className=\"site-header-background\"\n          style={{\n            backgroundImage: `url(\"${props.data.header.childImageSharp.fixed.src}\")`,\n          }}\n          key=\"header-background\"\n        >\n          <div css={inner}>\n            <SiteNav isHome key=\"nav\" />\n            <SiteHeaderContent className=\"site-header-conent\">\n              {/* <SiteTitle className=\"site-title\"> */}\n              {/* </SiteTitle> */}\n              {props.data.logo && (\n                <img\n                  style={{ maxHeight: \"55px\", display: \"inline-block\" }}\n                  src={props.data.logo.childImageSharp.fixed.src}\n                  alt={config.title}\n                />\n              )}\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]} key=\"main\">\n          <div css={[inner, Posts]}>\n            <div css={[PostFeed]}>\n              {props.data.allMarkdownRemark.edges.map((post, index) => {\n                // filter out drafts in production\n                return (\n                  (post.node.frontmatter.draft !== true ||\n                    process.env.NODE_ENV !== \"production\") && (\n                    <PostCard key={post.node.fields.slug} post={post.node} large={index === 0} />\n                  )\n                );\n              })}\n            </div>\n          </div>\n        </main>\n        {props.children}\n        {props.pageContext.numPages > 1 && (\n          <Pagination\n            key=\"pagination\"\n            currentPage={props.pageContext.currentPage}\n            numPages={props.pageContext.numPages}\n          />\n        )}\n        <Footer key=\"footer\" />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    logo: file(relativePath: { eq: \"img/e-logo.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"img/cover.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page\"s design changes.\n        fixed(width: 2000, quality: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            showImage\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      padding-bottom: 40px;\n      min-height: 280px;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}